unsigned char masterCell[16][16] =
{
  {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
};

unsigned char newCell[16][16] =
{
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
};

int cellCount = 0;

void setup()
{

}

void loop()
{
  for (int x = 0; x < 16; x++)
  {
    for (int y = 0; y < 16; y++)
    {
      cellCount = 0;

      // Check left

      if (masterCell[(x - 1) % 16][(y % 16)] == 1)
      {
        cellCount += 1;
      }

      // Check right

      if (masterCell[(x + 1) % 16][(y % 16)] == 1)
      {
        cellCount += 1;
      }

      // Check up

      if (masterCell[(x % 16)][(y - 1) % 16] == 1)
      {
        cellCount += 1;
      }

      // Check down

      if (masterCell[(x % 16)][(y + 1) % 16] == 1)
      {
        cellCount += 1;
      }

      // Check up/left

      if (masterCell[(x - 1) % 16][(y - 1) % 16] == 1)
      {
        cellCount += 1;
      }

      // Check up/right

      if (masterCell[(x + 1) % 16][(y - 1) % 16] == 1)
      {
        cellCount += 1;
      }

      // Check down/left

      if (masterCell[(x - 1) % 16][(y + 1) % 16] == 1)
      {
        cellCount += 1;
      }

      // Check down/right

      if (masterCell[(x + 1) % 16][(y + 1) % 16] == 1)
      {
        cellCount += 1;
      }
      

      // Check conditions for cell life or death

      if((masterCell[x][y] == 1) && (cellCount < 2))
      {
          newCell[x][y] = 0;
      }
         
      if((masterCell[x][y] == 1) && (cellCount > 3))
      {
          newCell[x][y] = 0;
      }
      
      if((masterCell[x][y] == 1) && ((cellCount == 2) || (cellCount == 3)))
      {
          newCell[x][y] = 1;
      }
         
      if((masterCell[x][y] == 0) && (cellCount == 3))
      {
          newCell[x][y] = 1;
      }

    }
  }

}
